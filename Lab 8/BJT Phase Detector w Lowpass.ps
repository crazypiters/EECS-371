%!PS-Adobe-3.0
%%Creator: gEDA gschem 1.6.0-20091004-56-g11921dc
%%CreationDate: Tue Nov  1 06:14:13 2011
%%Title: /home/ed/EECS-371/Lab 8/BJT Phase Detector w Lowpass.sch
%%Author: (null)
%%BoundingBox: 0 0 612 792
%%Orientation: Landscape
%%Pages: 1
%%Endcomments
%%BeginProlog
% Prolog for gEDA, define all the functions needed for rendering
% schematics on Postscript devices


% Draw a line from the second coordinate to the first
% x2 y2 x1 y1 width line -
/line {
    setlinewidth
    % pop off first element and moveto
    moveto
    % pop off remaining elements and draw a line segment
    lineto
    % draw it
    stroke
} bind def


% Draw a dot
% x y r dot -
/dot {
    0 360 arc fill
} bind def

% Draw a dot-dashed line, a bunch of lined segments,
% if the array element only has length two, draw a dot.
% [ [x2 y2 x1 y1] [x4 y4 x3 y3] [x5 y5] ... ] width dashed -
/width 0 def
/dashed {
    dup 2.0 div /width exch def
    setlinewidth
    % pop off each line segment and draw it as a dot or as a line
    {
	aload length 2 gt
	{ moveto lineto stroke}
	{ width dot } ifelse
    } forall
} bind def

% Draw an arc segment
% x y r ang1 ang2 width darc -
/darc {
    setlinewidth
    arc stroke
} bind def

% Draw a series of arc segment bits, if the array element only has a single
% element in it, draw a dot.
% [ [sa1 ea1] [sa2 ea2] ... ] x y r width dashedarc -
/x 0 def
/y 0 def
/dashedarc {
    dup /width exch def
    setlinewidth
    /r exch def  
    /y exch def
    /x exch def
    { aload length 1 gt
	{
	    % this element had two angles in it
	    % extract start and stop angles
	    x y r   % drop x y and r onto stack
		    % at this point we have: sa ea x y r
		    % we need                      x y r sa ea
		    % so..
	    5 -2 roll
	    % and add it to the current path, and draw it
	    arc stroke
	} {
	    % this element only had one angle in it, place a
	    % filled dot at the appropriate place
	    % compute center point of the arc using the angle
	    % that is on the top of the stack
	    dup   		% angle angle
	    cos r mul x add 	% angle x
	    exch		% x angle
	    sin r mul y add	% x y
	    width		% x y width/2
	    dot			% draw the dot
	} ifelse
    } forall

    % Now draw it
    stroke
} bind def

% Draw a box
% width height x y linethickness box -
/box {
    setlinewidth
    moveto
    exch dup 0 rlineto	 % w h, h w w 0      -- Draw bottom line
    exch 0 exch rlineto	 % h w, w h 0, w 0 h -- Draw right line 
    neg 0 rlineto	 % w, -w 0           -- Draw Top line
    closepath		 % finish and draw it
    stroke
} bind def			     

% Draw a filled box
% width height x y fbox -
/fbox {
    moveto
    exch dup 0 rlineto	
    exch 0 exch rlineto	
    neg 0 rlineto		
    closepath			
    fill			
} bind def

% Font reincoding utilities

% ISOLatin1Encoding, extended with remaining uncoded glyphs
/ISOLatin1Extended [
    /.notdef /Lslash /lslash /OE /oe /Scaron /scaron /Zcaron /zcaron
    /Ydieresis /trademark /bullet /dagger /daggerdbl /ellipsis /emdash
    /endash /fi /fl /florin /fraction /guilsinglleft /guilsinglright
    /perthousand /quotedblbase /quotedblleft /quotedblright
    /quotesinglbase /quotesingle /.notdef /.notdef /.notdef /space
    /exclam /quotedbl /numbersign /dollar /percent /ampersand
    /quoteright /parenleft /parenright /asterisk /plus /comma /minus
    /period /slash /zero /one /two /three /four /five /six /seven /eight
    /nine /colon /semicolon /less /equal /greater /question /at /A /B /C
    /D /E /F /G /H /I /J /K /L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z
    /bracketleft /backslash /bracketright /asciicircum /underscore
    /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p /q /r /s
    /t /u /v /w /x /y /z /braceleft /bar /braceright /asciitilde
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /dotlessi /grave /acute /circumflex
    /tilde /macron /breve /dotaccent /dieresis /.notdef /ring /cedilla
    /.notdef /hungarumlaut /ogonek /caron /space /exclamdown /cent
    /sterling /currency /yen /brokenbar /section /dieresis /copyright
    /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron
    /degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph
    /periodcentered /cedilla /onesuperior /ordmasculine /guillemotright
    /onequarter /onehalf /threequarters /questiondown /Agrave /Aacute
    /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla /Egrave /Eacute
    /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis /Eth
    /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
    /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn
    /germandbls /agrave /aacute /acircumflex /atilde /adieresis /aring
    /ae /ccedilla /egrave /eacute /ecircumflex /edieresis /igrave
    /iacute /icircumflex /idieresis /eth /ntilde /ograve /oacute
    /ocircumflex /otilde /odieresis /divide /oslash /ugrave /uacute
    /ucircumflex /udieresis /yacute /thorn /ydieresis
] def

% `new-font-name' `encoding-vector' `old-font-name' RE -
/RE {
    findfont
    dup maxlength dict begin {
        1 index /FID ne { def } { pop pop } ifelse
    } forall
    /Encoding exch def
    dup /FontName exch def
    currentdict end definefont pop
} bind def

% Text handling functions, select the font and scale it, then we need
% only to apply the appropriate transformations to get the text
% justified into the right spots.  The bad thing here is that we don't
% do any kerning, so the output may look a bit strange.

% compute the height of one character and return lly and ury
% (char) charheight lly ury
/charheight {
    gsave			% push graphics state
	newpath			% clear current path
	0 0 moveto		% Set current point
	false charpath		% get path
	flattenpath		% flatten path
	pathbbox		% stack = llx lly urx ury
	exch pop		% stack = llx lly ury
	3 -1 roll pop		% stack = lly ury
    grestore			% pop graphics state
} bind def

% compute the height of a string, one character at a time
% (string) stringheight lly ury
/lly 0.0 def
/ury 0.0 def

/stringheight {
    /lly 0.0 def			% initial value of heightmin
    /ury 0.0 def			% initial value of heightmax
    {				% work through string
	( ) dup 0 4 -1 roll put	% create one character string
	charheight		% measure it's height
	dup ury gt {		% if ury gt heightmax
	    /ury exch def	% update with new value
	} {
	    pop			% else discard ury
	} ifelse
	dup lly lt {		% if lly lt heightmin
	    /lly exch def	% update with new value
	} {
	    pop			% else discard lly
	} ifelse
    } forall
    lly ury			% Return the results
} bind def

% calculate the string width taking into account the escapes.
/mystrx 0.0 def
/mystry 0.0 def
/mystresc false def

/mystringwidth {
    /mystrx 0.0 def
    /mystry 0.0 def
    /mystresc false def
    {				% work through string
	% did we process the escape character last?
	mystresc {
	    % last character was escape
	    % handle the escape
	    % is it an _ = 95?
	    dup 95 eq {
		pop  % we don't need the character anymore
		% toggle drawing overbars
		0.0 0.0 % make it like it never happened...
	    } {
		% otherwise measure the character 
		(\\ ) dup 1 4 -1 roll put % count a \ and the character
		stringwidth
	    } ifelse
	    % and reset the flag
	    /mystresc false def
	} {
	    % last character was not escape
	    % is this escape
	    dup 92 eq {
		% yes, escape character, set flag
		/mystresc true def
		pop % drop character
		0.0 0.0 % make like this character has no width and height
	    } {
		( ) dup 0 4 -1 roll put	% create one character string
		stringwidth		% measure it's height/width
	    } ifelse
	} ifelse
	% accumulate x and y movements
	mystry add /mystry exch def
	mystrx add /mystrx exch def
    } forall
    mystrx mystry % drop results on stack
} bind def

% Render a string with overbars
%
/escaped false def
/drawoverbar false def
/fontsize 0.0 def

%string1 string2 append -
/append {
    2 copy length exch length add % find new length
    string dup % string1 string2 string string
    4 2 roll % string string string1 string2
    2 index 0 3 index
    % string string string1 string2 string 0 string1
    putinterval % string string string1 string2
    exch length exch putinterval
} bind def

% If drawoverbar is set, draw a line of the same length as the given string
% string overbarshowline -
/overbarshowline {
    % print overbar if necessary
    stringwidth pop 0
    drawoverbar {
        rlineto
        gsave stroke grestore
    } {
        rmoveto
    } ifelse
} bind def

% Draws overbars for the given string, then shows the string itself
% string overbarshow
/overbarshow {
    /overbarshowacc () def
    /overbarshowtxt () def

    gsave
    fontsize 10.0 div setlinewidth
    0 fontsize rmoveto  % move to (0,overbarheight)

    {				% work through string
	escaped {
	    % the last character was the escape
	    % handle the escape
	    % is it an _ = 95?
	    dup 95 eq {
		pop  % we don't need the character anymore
                overbarshowacc overbarshowline
                % toggle drawing overbars
		/drawoverbar drawoverbar not def

                % Append the contents off the accumulator to the text
                % string we're eventually going to show
                /overbarshowtxt overbarshowtxt overbarshowacc append def

                % clear accumulator
                /overbarshowacc () def
	    } {
                % add to accumulator
                (\\ ) dup 1 4 -1 roll put
                overbarshowacc exch append
                /overbarshowacc exch def
	    } ifelse
	    % and reset the flag
	    /escaped false def
	} {
	    % check for escape character \ = 92
	    dup 92 eq {
		% yes, escape character, set flag
		/escaped true def
		pop % drop character
	    } {
                % add to accumulator
                ( ) dup 0 4 -1 roll put
                overbarshowacc exch append
                /overbarshowacc exch def
	    } ifelse
	} ifelse
    } forall
    % Catch any leftovers
    overbarshowacc overbarshowline
    overbarshowtxt overbarshowacc append

    grestore
    show
} bind def

% 
% hcenter rjustify vcenter vjustify spacing [(line1) (line2) ... ] rot x y size text -
/stringw 0.0 def
/stringh 0.0 def
/spacing 0.0 def
/strings [ ] def
/stringtxt ( ) def
/stringcount 0 def
/rot 0.0 def

/text {
    gsave	        % save state for later
    /drawoverbar false def      % start by not drawing overbars

    dup /fontsize exch def  % save font size for corrections later
    % do font selection 
    /gEDAFont findfont
    exch scalefont
    setfont

    % set up coordinates
    translate           % move origin to given point
    rotate		% rotate so that text is drawn
    0 0 moveto
    dup length /stringcount exch def			% Get number of strings
    /strings exch def     				% save strings
    /spacing exch def
    % do we have more than 1 string to render?
    stringcount 1 eq {
	/stringtxt strings aload pop def		% get the string 
	/stringw stringtxt mystringwidth pop neg def	% get the -width
	/stringh stringtxt stringheight exch pop neg def% get the -height

	% First do vertical calculations
	% hcenter rjustify vcenter vjustify 
	% vertical justification
	{ 0 stringh rmoveto } if 
	% vertical center
	{ 0 stringh 0.3571425 mul rmoveto } if  % not 0.5, so that
						% it looks nicer
	% Then do horizontal calculations
	% right justify
	{ stringw 0 rmoveto } if
	% center
	{ stringw 2.0 div 0 rmoveto } if
	% Draw the text
	stringtxt overbarshow
    } {
	% More than one line, compute bounding box for the text

	% vertical height, don't use the actual hieght of the characters
	% assume that the user wants to make the baselines line up with two
	% text boxes placed side by side
	/stringh stringcount spacing mul neg def
	% Now figure out horizontal size, this amounts to keeping track
	% of the longest string
	/stringw 0.0 def
	strings {
	    mystringwidth pop
	    dup stringw gt {
		/stringw exch def
	    } {
		pop
	    } ifelse
	} forall
	/stringw stringw neg def 	% get the -width
	
	% First do vertical calculations
	% hcenter rjustify vcenter vjustify 
	% vertical justification
	{ 0 stringh fontsize add rmoveto } if 
	% vertical center
	{ 0 stringh 0.5 mul rmoveto } if 
	% Then do horizontal calculations
	% right justify
	{ stringw 0 rmoveto } if
	% center
	{ stringw 2.0 div 0 rmoveto } if
	% now move up to the first line and begin rendering
	0 stringcount 1 sub spacing mul rmoveto
	strings {
	    gsave		% Save starting point
	    overbarshow		% render the text
	    grestore
	    0 spacing neg rmoveto
	} forall
    } ifelse
    grestore 	% Restore old state
} bind def


%%EndProlog
%%Page: 1 1
/gEDAFont ISOLatin1Extended /Helvetica RE
2 setlinecap
0.072000 0.072000 scale
7485 499 translate 90 rotate
0.588235 0.588235 scale
-40000 -40000 translate
gsave
40000 40000 57000 40000 10 line
57000 40000 57000 51000 10 line
57000 51000 40000 51000 10 line
40000 51000 40000 40000 10 line
52900 40600 52900 40000 10 line
gsave
false false false false 208.000000 [(FILE:) ] 0 49500 40400 144.444443 text
grestore
gsave
false false false false 208.000000 [(REVISION:) ] 0 53000 40400 144.444443 text
grestore
gsave
false false false false 208.000000 [(DRAWN BY: ) ] 0 53000 40100 144.444443 text
grestore
gsave
false false false false 208.000000 [(PAGE) ] 0 49500 40100 144.444443 text
grestore
gsave
false false false false 208.000000 [(OF) ] 0 51200 40100 144.444443 text
grestore
gsave
false false false false 208.000000 [(TITLE) ] 0 49500 40700 144.444443 text
grestore
49400 40000 57000 40000 10 line
57000 40000 57000 41400 10 line
57000 41400 49400 41400 10 line
49400 41400 49400 40000 10 line
49400 40600 57000 40600 10 line
grestore
gsave
52500 47200 52500 46800 10 line
52500 47200 52800 47000 10 line
52800 47000 52500 46800 10 line
52800 47200 52800 46800 10 line
52200 47000 52400 47000 10 line
53100 47000 52900 47000 10 line
52900 47000 52800 47000 10 line
52500 47000 52400 47000 10 line
grestore
gsave
false false false false 260.000000 [(D1) ] 0 52500 47300 180.555557 text
grestore
gsave
52400 46500 52400 46100 10 line
52400 46500 52700 46300 10 line
52700 46300 52400 46100 10 line
52700 46500 52700 46100 10 line
52100 46300 52300 46300 10 line
53000 46300 52800 46300 10 line
52800 46300 52700 46300 10 line
52400 46300 52300 46300 10 line
grestore
gsave
false false false false 260.000000 [(D2) ] 0 52400 46600 180.555557 text
grestore
gsave
53100 44900 53300 44800 10 line
53300 44800 53100 44700 10 line
53100 44700 53300 44600 10 line
53300 44600 53100 44500 10 line
53100 44900 53300 45000 10 line
53300 45000 53200 45050 10 line
53200 45200 53200 45050 10 line
53200 44300 53200 44452 10 line
53100 44501 53200 44450 10 line
grestore
gsave
false false false false 260.000000 [(R6) ] 90 53000 44500 180.555557 text
grestore
gsave
false false false false 260.000000 [(10k) ] 0 53400 44700 180.555557 text
grestore
53100 47000 53200 47000 10 line
53200 47000 53200 45200 10 line
gsave
53200 44100 53200 44300 10 line
53100 44100 53300 44100 10 line
53155 44050 53245 44050 10 line
53180 44010 53220 44010 10 line
grestore
gsave
false false false false 260.000000 [(Phase Detector \(Type 1\)) ] 0 50500 40900 180.555557 text
grestore
gsave
49200 49000 49200 48800 10 line
gsave
false false false false 156.000000 [(C) ] 0 49100 48850 108.333336 text
grestore
49200 48200 49200 48000 10 line
gsave
false false false false 156.000000 [(E) ] 0 49100 48050 108.333336 text
grestore
49100 48501 316 0 360 10 darc
49200 48200 49000 48400 10 line
49200 48800 49000 48600 10 line
49000 48700 49000 48300 10 line
48600 48500 48784 48500 10 line
gsave
false false false false 156.000000 [(B) ] 0 48700 48550 108.333336 text
grestore
49000 48500 48784 48500 10 line
10 setlinewidth
49110 48240 moveto 49201 48200 lineto 49155 48295 lineto 49135 48265 lineto closepath stroke
49110 48240 moveto 49201 48200 lineto 49155 48295 lineto 49135 48265 lineto closepath fill
grestore
gsave
false false false false 260.000000 [(Q1) ] 0 49500 48500 180.555557 text
grestore
gsave
49200 46600 49200 46400 10 line
gsave
false false false false 156.000000 [(C) ] 0 49100 46450 108.333336 text
grestore
49200 45800 49200 45600 10 line
gsave
false false false false 156.000000 [(E) ] 0 49100 45650 108.333336 text
grestore
49100 46101 316 0 360 10 darc
49200 45800 49000 46000 10 line
49200 46400 49000 46200 10 line
49000 46300 49000 45900 10 line
48600 46100 48784 46100 10 line
gsave
false false false false 156.000000 [(B) ] 0 48700 46150 108.333336 text
grestore
49000 46100 48784 46100 10 line
10 setlinewidth
49110 45840 moveto 49201 45800 lineto 49155 45895 lineto 49135 45865 lineto closepath stroke
49110 45840 moveto 49201 45800 lineto 49155 45895 lineto 49135 45865 lineto closepath fill
grestore
gsave
false false false false 260.000000 [(Q3) ] 0 49500 46100 180.555557 text
grestore
gsave
51600 49000 51600 48800 10 line
gsave
false false false false 156.000000 [(C) ] 0 51500 48850 108.333336 text
grestore
51600 48200 51600 48000 10 line
gsave
false false false false 156.000000 [(E) ] 0 51500 48050 108.333336 text
grestore
51500 48501 316 0 360 10 darc
51600 48200 51400 48400 10 line
51600 48800 51400 48600 10 line
51400 48700 51400 48300 10 line
51000 48500 51184 48500 10 line
gsave
false false false false 156.000000 [(B) ] 0 51100 48550 108.333336 text
grestore
51400 48500 51184 48500 10 line
10 setlinewidth
51510 48240 moveto 51601 48200 lineto 51555 48295 lineto 51535 48265 lineto closepath stroke
51510 48240 moveto 51601 48200 lineto 51555 48295 lineto 51535 48265 lineto closepath fill
grestore
gsave
false false false false 260.000000 [(Q2) ] 0 51900 48500 180.555557 text
grestore
gsave
51600 46600 51600 46400 10 line
gsave
false false false false 156.000000 [(C) ] 0 51500 46450 108.333336 text
grestore
51600 45800 51600 45600 10 line
gsave
false false false false 156.000000 [(E) ] 0 51500 45650 108.333336 text
grestore
51500 46101 316 0 360 10 darc
51600 45800 51400 46000 10 line
51600 46400 51400 46200 10 line
51400 46300 51400 45900 10 line
51000 46100 51184 46100 10 line
gsave
false false false false 156.000000 [(B) ] 0 51100 46150 108.333336 text
grestore
51400 46100 51184 46100 10 line
10 setlinewidth
51510 45840 moveto 51601 45800 lineto 51555 45895 lineto 51535 45865 lineto closepath stroke
51510 45840 moveto 51601 45800 lineto 51555 45895 lineto 51535 45865 lineto closepath fill
grestore
gsave
false false false false 260.000000 [(Q4) ] 0 51900 46100 180.555557 text
grestore
gsave
51500 47500 51700 47400 10 line
51700 47400 51500 47300 10 line
51500 47300 51700 47200 10 line
51700 47200 51500 47100 10 line
51500 47500 51700 47600 10 line
51700 47600 51600 47650 10 line
51600 47800 51600 47650 10 line
51600 46900 51600 47052 10 line
51500 47101 51600 47050 10 line
grestore
gsave
false false false false 260.000000 [(R2) ] 90 51400 47100 180.555557 text
grestore
gsave
false false false false 260.000000 [(1k) ] 90 51900 47200 180.555557 text
grestore
gsave
49100 47400 49300 47300 10 line
49300 47300 49100 47200 10 line
49100 47200 49300 47100 10 line
49300 47100 49100 47000 10 line
49100 47400 49300 47500 10 line
49300 47500 49200 47550 10 line
49200 47700 49200 47550 10 line
49200 46800 49200 46952 10 line
49100 47001 49200 46950 10 line
grestore
gsave
false false false false 260.000000 [(R1) ] 90 49000 47000 180.555557 text
grestore
gsave
false false false false 260.000000 [(1k) ] 0 49300 47100 180.555557 text
grestore
49200 48000 49200 47700 10 line
49200 46600 49200 46800 10 line
51600 47800 51600 48000 10 line
gsave
50700 45100 50700 45300 10 line
50600 45100 50800 45100 10 line
50655 45050 50745 45050 10 line
50680 45010 50720 45010 10 line
newpath
50700 45300
25
0 360 arc
fill
newpath
50700 45300
25
0 360 arc
fill
grestore
49200 45600 49200 45300 10 line
49200 45300 51600 45300 10 line
51600 45300 51600 45600 10 line
50100 46100 49900 46100 10 line
49900 46100 49900 49900 10 line
50000 45200 50000 48500 10 line
48600 48500 48200 48500 10 line
47700 45200 50000 45200 10 line
47700 45200 47700 46100 10 line
47300 48500 47300 49900 10 line
47300 49900 49900 49900 10 line
gsave
51600 49000 51600 49200 10 line
51450 49200 51750 49200 10 line
gsave
false false false false 208.000000 [(Vcc) ] 0 51475 49250 144.444443 text
grestore
grestore
gsave
49200 49000 49200 49200 10 line
49050 49200 49350 49200 10 line
gsave
false false false false 208.000000 [(Vcc) ] 0 49075 49250 144.444443 text
grestore
grestore
49200 46800 52200 46800 10 line
51600 46900 51600 46600 10 line
51600 46600 52100 46600 10 line
52100 46600 52100 46300 10 line
52200 47000 52200 46800 10 line
53000 46300 53200 46300 10 line
50100 48500 50000 48500 10 line
53700 46600 53200 46600 10 line
gsave
47600 48400 47700 48600 10 line
47700 48600 47800 48400 10 line
47800 48400 47900 48600 10 line
47900 48600 48000 48400 10 line
47600 48400 47500 48600 10 line
47500 48600 47450 48500 10 line
47300 48500 47450 48500 10 line
48200 48500 48048 48500 10 line
47999 48400 48050 48500 10 line
grestore
gsave
false true false true 260.000000 [(R2) ] 0 48000 48300 180.555557 text
grestore
gsave
false true false true 260.000000 [(1k) ] 0 47900 48800 180.555557 text
grestore
gsave
48000 46000 48100 46200 10 line
48100 46200 48200 46000 10 line
48200 46000 48300 46200 10 line
48300 46200 48400 46000 10 line
48000 46000 47900 46200 10 line
47900 46200 47850 46100 10 line
47700 46100 47850 46100 10 line
48600 46100 48448 46100 10 line
48399 46000 48450 46100 10 line
grestore
gsave
false true false true 260.000000 [(R2) ] 0 48400 45900 180.555557 text
grestore
gsave
false true false true 260.000000 [(1k) ] 0 48300 46400 180.555557 text
grestore
gsave
50400 48400 50500 48600 10 line
50500 48600 50600 48400 10 line
50600 48400 50700 48600 10 line
50700 48600 50800 48400 10 line
50400 48400 50300 48600 10 line
50300 48600 50250 48500 10 line
50100 48500 50250 48500 10 line
51000 48500 50848 48500 10 line
50799 48400 50850 48500 10 line
grestore
gsave
false true false true 260.000000 [(R2) ] 0 50800 48300 180.555557 text
grestore
gsave
false true false true 260.000000 [(1k) ] 0 50700 48800 180.555557 text
grestore
gsave
50400 46000 50500 46200 10 line
50500 46200 50600 46000 10 line
50600 46000 50700 46200 10 line
50700 46200 50800 46000 10 line
50400 46000 50300 46200 10 line
50300 46200 50250 46100 10 line
50100 46100 50250 46100 10 line
51000 46100 50848 46100 10 line
50799 46000 50850 46100 10 line
grestore
gsave
false true false true 260.000000 [(R2) ] 0 50800 45900 180.555557 text
grestore
gsave
false true false true 260.000000 [(1k) ] 0 50700 46400 180.555557 text
grestore
gsave
46500 49500 46500 49300 10 line
gsave
false false false false 156.000000 [(C) ] 0 46400 49350 108.333336 text
grestore
46500 48700 46500 48500 10 line
gsave
false false false false 156.000000 [(E) ] 0 46400 48550 108.333336 text
grestore
46400 49001 316 0 360 10 darc
46500 48700 46300 48900 10 line
46500 49300 46300 49100 10 line
46300 49200 46300 48800 10 line
45900 49000 46084 49000 10 line
gsave
false false false false 156.000000 [(B) ] 0 46000 49050 108.333336 text
grestore
46300 49000 46084 49000 10 line
10 setlinewidth
46410 48740 moveto 46501 48700 lineto 46455 48795 lineto 46435 48765 lineto closepath stroke
46410 48740 moveto 46501 48700 lineto 46455 48795 lineto 46435 48765 lineto closepath fill
grestore
gsave
false false false false 260.000000 [(Q1) ] 0 46800 49000 180.555557 text
grestore
gsave
46400 48200 46600 48100 10 line
46600 48100 46400 48000 10 line
46400 48000 46600 47900 10 line
46600 47900 46400 47800 10 line
46400 48200 46600 48300 10 line
46600 48300 46500 48350 10 line
46500 48500 46500 48350 10 line
46500 47600 46500 47752 10 line
46400 47801 46500 47750 10 line
grestore
gsave
false false false false 260.000000 [(R1) ] 90 46300 47800 180.555557 text
grestore
gsave
false false false false 260.000000 [(1k) ] 0 46600 47900 180.555557 text
grestore
gsave
46500 47400 46500 47600 10 line
46400 47400 46600 47400 10 line
46455 47350 46545 47350 10 line
46480 47310 46520 47310 10 line
grestore
gsave
46500 49500 46500 49700 10 line
46350 49700 46650 49700 10 line
gsave
false false false false 208.000000 [(Vcc) ] 0 46375 49750 144.444443 text
grestore
grestore
gsave
41200 49000 41400 49000 10 line
40600 49100 40600 48900 10 line
40600 49100 41100 49100 10 line
41100 49100 41200 49000 10 line
41200 49000 41100 48900 10 line
41100 48900 40600 48900 10 line
grestore
gsave
false false false false 260.000000 [(A) ] 0 40400 48900 180.555557 text
grestore
gsave
42900 49500 42900 49300 10 line
gsave
false false false false 156.000000 [(C) ] 0 42800 49350 108.333336 text
grestore
42900 48700 42900 48500 10 line
gsave
false false false false 156.000000 [(E) ] 0 42800 48550 108.333336 text
grestore
42800 49001 316 0 360 10 darc
42900 48700 42700 48900 10 line
42900 49300 42700 49100 10 line
42700 49200 42700 48800 10 line
42300 49000 42484 49000 10 line
gsave
false false false false 156.000000 [(B) ] 0 42400 49050 108.333336 text
grestore
42700 49000 42484 49000 10 line
10 setlinewidth
42810 48740 moveto 42901 48700 lineto 42855 48795 lineto 42835 48765 lineto closepath stroke
42810 48740 moveto 42901 48700 lineto 42855 48795 lineto 42835 48765 lineto closepath fill
grestore
gsave
false false false false 260.000000 [(Q1) ] 0 43200 49000 180.555557 text
grestore
gsave
41700 48900 41800 49100 10 line
41800 49100 41900 48900 10 line
41900 48900 42000 49100 10 line
42000 49100 42100 48900 10 line
41700 48900 41600 49100 10 line
41600 49100 41550 49000 10 line
41400 49000 41550 49000 10 line
42300 49000 42148 49000 10 line
42099 48900 42150 49000 10 line
grestore
gsave
false true false true 260.000000 [(R2) ] 0 42100 48800 180.555557 text
grestore
gsave
false true false true 260.000000 [(1k) ] 0 42000 49300 180.555557 text
grestore
gsave
42900 48300 42900 48500 10 line
42800 48300 43000 48300 10 line
42855 48250 42945 48250 10 line
42880 48210 42920 48210 10 line
grestore
gsave
42800 50100 43000 50000 10 line
43000 50000 42800 49900 10 line
42800 49900 43000 49800 10 line
43000 49800 42800 49700 10 line
42800 50100 43000 50200 10 line
43000 50200 42900 50250 10 line
42900 50400 42900 50250 10 line
42900 49500 42900 49652 10 line
42800 49701 42900 49650 10 line
grestore
gsave
false false false false 260.000000 [(R1) ] 90 42700 49700 180.555557 text
grestore
gsave
false false false false 260.000000 [(1k) ] 0 43000 49800 180.555557 text
grestore
gsave
42900 50400 42900 50600 10 line
42750 50600 43050 50600 10 line
gsave
false false false false 208.000000 [(Vcc) ] 0 42775 50650 144.444443 text
grestore
grestore
gsave
44800 49000 44800 49200 10 line
gsave
false false false true 156.000000 [(C) ] 0 44700 49150 108.333336 text
grestore
44800 49800 44800 50000 10 line
gsave
false false false true 156.000000 [(E) ] 0 44700 49950 108.333336 text
grestore
44700 49499 316 0 360 10 darc
44800 49800 44600 49600 10 line
44800 49200 44600 49400 10 line
44600 49300 44600 49700 10 line
44200 49500 44384 49500 10 line
gsave
false false false true 156.000000 [(B) ] 0 44300 49450 108.333336 text
grestore
44600 49500 44384 49500 10 line
10 setlinewidth
44640 49710 moveto 44600 49599 lineto 44695 49645 lineto 44665 49665 lineto closepath stroke
44640 49710 moveto 44600 49599 lineto 44695 49645 lineto 44665 49665 lineto closepath fill
grestore
gsave
false false false true 260.000000 [(Q?) ] 0 45100 49500 180.555557 text
grestore
gsave
43600 49400 43700 49600 10 line
43700 49600 43800 49400 10 line
43800 49400 43900 49600 10 line
43900 49600 44000 49400 10 line
43600 49400 43500 49600 10 line
43500 49600 43450 49500 10 line
43300 49500 43450 49500 10 line
44200 49500 44048 49500 10 line
43999 49400 44050 49500 10 line
grestore
gsave
false true false true 260.000000 [(R2) ] 0 44000 49300 180.555557 text
grestore
gsave
false true false true 260.000000 [(10k) ] 0 43900 49800 180.555557 text
grestore
42900 49500 43300 49500 10 line
gsave
44800 50000 44800 50200 10 line
44650 50200 44950 50200 10 line
gsave
false false false false 208.000000 [(Vcc) ] 0 44675 50250 144.444443 text
grestore
grestore
gsave
44700 48700 44900 48600 10 line
44900 48600 44700 48500 10 line
44700 48500 44900 48400 10 line
44900 48400 44700 48300 10 line
44700 48700 44900 48800 10 line
44900 48800 44800 48850 10 line
44800 49000 44800 48850 10 line
44800 48100 44800 48252 10 line
44700 48301 44800 48250 10 line
grestore
gsave
false false false false 260.000000 [(R1) ] 90 44600 48300 180.555557 text
grestore
gsave
false false false false 260.000000 [(10k) ] 0 44900 48400 180.555557 text
grestore
gsave
44800 47900 44800 48100 10 line
44700 47900 44900 47900 10 line
44755 47850 44845 47850 10 line
44780 47810 44820 47810 10 line
grestore
45900 49000 44800 49000 10 line
47300 48500 46500 48500 10 line
gsave
46800 43600 47000 43600 10 line
47000 43700 47000 43500 10 line
47000 43700 47500 43700 10 line
47500 43700 47600 43600 10 line
47600 43600 47500 43500 10 line
47500 43500 47000 43500 10 line
grestore
gsave
false false false false 260.000000 [(OUT) ] 0 47700 43500 180.555557 text
grestore
gsave
45700 44200 45700 44400 10 line
45550 44400 45850 44400 10 line
gsave
false false false false 208.000000 [(Vcc) ] 0 45575 44450 144.444443 text
grestore
grestore
gsave
45700 43000 45700 43200 10 line
45600 43000 45800 43000 10 line
45655 42950 45745 42950 10 line
45680 42910 45720 42910 10 line
grestore
46200 43600 46800 43600 10 line
46300 43600 46300 42800 10 line
44600 43400 45200 43400 10 line
45100 42300 45100 43400 10 line
gsave
41600 43000 41600 43800 10 line
41600 43800 42200 43400 10 line
42200 43400 41600 43000 10 line
41600 43600 41400 43600 10 line
gsave
false false false false 208.000000 [(3) ] 0 41450 43625 144.444443 text
grestore
41600 43200 41400 43200 10 line
gsave
false false false false 208.000000 [(2) ] 0 41450 43225 144.444443 text
grestore
42200 43400 42400 43400 10 line
gsave
false false false false 208.000000 [(1) ] 0 42275 43425 144.444443 text
grestore
41900 43200 41900 43000 10 line
gsave
false false false false 208.000000 [(4) ] 0 41925 43050 144.444443 text
grestore
41900 43600 41900 43800 10 line
gsave
false false false false 208.000000 [(8) ] 0 41925 43650 144.444443 text
grestore
41650 43600 41750 43600 10 line
41700 43650 41700 43550 10 line
41650 43200 41750 43200 10 line
gsave
false false false false 208.000000 [(TL082) ] 0 41625 43350 144.444443 text
grestore
grestore
gsave
false false false false 260.000000 [(U1) ] 0 41600 43900 180.555557 text
grestore
gsave
45400 43200 45400 44000 10 line
45400 44000 46000 43600 10 line
46000 43600 45400 43200 10 line
45400 43800 45200 43800 10 line
gsave
false false false false 208.000000 [(5) ] 0 45250 43825 144.444443 text
grestore
45400 43400 45200 43400 10 line
gsave
false false false false 208.000000 [(6) ] 0 45250 43425 144.444443 text
grestore
46000 43600 46200 43600 10 line
gsave
false false false false 208.000000 [(7) ] 0 46075 43625 144.444443 text
grestore
45700 43400 45700 43200 10 line
gsave
false false false false 208.000000 [(4) ] 0 45725 43250 144.444443 text
grestore
45700 43800 45700 44000 10 line
gsave
false false false false 208.000000 [(8) ] 0 45725 43850 144.444443 text
grestore
45450 43800 45550 43800 10 line
45500 43850 45500 43750 10 line
45450 43400 45550 43400 10 line
gsave
false false false false 208.000000 [(TL082) ] 0 45425 43550 144.444443 text
grestore
grestore
gsave
false false false false 260.000000 [(U2) ] 0 45400 44100 180.555557 text
grestore
42500 41200 42500 43400 10 line
42400 43400 43700 43400 10 line
gsave
41900 42800 41900 43000 10 line
41800 42800 42000 42800 10 line
41855 42750 41945 42750 10 line
41880 42710 41920 42710 10 line
grestore
gsave
41900 44000 41900 44200 10 line
41750 44200 42050 44200 10 line
gsave
false false false false 208.000000 [(Vcc) ] 0 41775 44250 144.444443 text
grestore
grestore
45700 44200 45700 44000 10 line
41900 44000 41900 43800 10 line
gsave
40700 45800 40900 45700 10 line
40900 45700 40700 45600 10 line
40700 45600 40900 45500 10 line
40900 45500 40700 45400 10 line
40700 45800 40900 45900 10 line
40900 45900 40800 45950 10 line
40800 46100 40800 45950 10 line
40800 45200 40800 45352 10 line
40700 45401 40800 45350 10 line
grestore
gsave
false false false false 260.000000 [(R3) ] 90 40600 45400 180.555557 text
grestore
gsave
false false false false 260.000000 [(10k) ] 0 41000 45600 180.555557 text
grestore
gsave
40700 44900 40900 44800 10 line
40900 44800 40700 44700 10 line
40700 44700 40900 44600 10 line
40900 44600 40700 44500 10 line
40700 44900 40900 45000 10 line
40900 45000 40800 45050 10 line
40800 45200 40800 45050 10 line
40800 44300 40800 44452 10 line
40700 44501 40800 44450 10 line
grestore
gsave
false false false false 260.000000 [(R4) ] 90 40600 44500 180.555557 text
grestore
gsave
false false false false 260.000000 [(10k) ] 0 41000 44700 180.555557 text
grestore
gsave
44000 43300 44100 43500 10 line
44100 43500 44200 43300 10 line
44200 43300 44300 43500 10 line
44300 43500 44400 43300 10 line
44000 43300 43900 43500 10 line
43900 43500 43850 43400 10 line
43700 43400 43850 43400 10 line
44600 43400 44448 43400 10 line
44399 43300 44450 43400 10 line
grestore
gsave
false true false true 260.000000 [(R7) ] 0 44400 43200 180.555557 text
grestore
gsave
false false false false 260.000000 [(100k) ] 0 44000 43500 180.555557 text
grestore
gsave
41100 43300 41000 43100 10 line
41000 43100 40900 43300 10 line
40900 43300 40800 43100 10 line
40800 43100 40700 43300 10 line
41100 43300 41200 43100 10 line
41200 43100 41250 43200 10 line
41400 43200 41250 43200 10 line
40500 43200 40652 43200 10 line
40701 43300 40650 43200 10 line
grestore
gsave
false false false false 260.000000 [(R5) ] 0 40800 43400 180.555557 text
grestore
gsave
false false false false 260.000000 [(100k) ] 0 40800 42900 180.555557 text
grestore
gsave
42300 41900 42100 41900 10 line
41400 41900 41600 41900 10 line
41900 41700 41900 42100 10 line
41800 41700 41800 42100 10 line
41600 41900 41800 41900 10 line
41900 41900 42100 41900 10 line
newpath
41400 41900
25
0 360 arc
fill
newpath
41400 41900
25
0 360 arc
fill
grestore
gsave
false true false true 260.000000 [(C1) ] 0 42100 41600 180.555557 text
grestore
gsave
false true false true 260.000000 [(0.01uF) ] 0 42200 42300 180.555557 text
grestore
41400 41200 41400 43200 10 line
42300 41900 42500 41900 10 line
gsave
41800 41100 41900 41300 10 line
41900 41300 42000 41100 10 line
42000 41100 42100 41300 10 line
42100 41300 42200 41100 10 line
41800 41100 41700 41300 10 line
41700 41300 41650 41200 10 line
41500 41200 41650 41200 10 line
42400 41200 42248 41200 10 line
42199 41100 42250 41200 10 line
grestore
gsave
false true false true 260.000000 [(R8) ] 0 42200 41000 180.555557 text
grestore
gsave
false false false false 260.000000 [(100k) ] 0 41800 40600 180.555557 text
grestore
42400 41200 42500 41200 10 line
41500 41200 41400 41200 10 line
gsave
40800 46100 40800 46300 10 line
40650 46300 40950 46300 10 line
gsave
false false false false 208.000000 [(Vcc) ] 0 40675 46350 144.444443 text
grestore
grestore
gsave
40800 44100 40800 44300 10 line
40700 44100 40900 44100 10 line
40755 44050 40845 44050 10 line
40780 44010 40820 44010 10 line
grestore
41400 43600 41300 43600 10 line
41300 43600 41300 45200 10 line
40800 45200 45200 45200 10 line
45200 43800 45200 45200 10 line
gsave
44000 42200 44100 42400 10 line
44100 42400 44200 42200 10 line
44200 42200 44300 42400 10 line
44300 42400 44400 42200 10 line
44000 42200 43900 42400 10 line
43900 42400 43850 42300 10 line
43700 42300 43850 42300 10 line
44600 42300 44448 42300 10 line
44399 42200 44450 42300 10 line
grestore
gsave
false true false true 260.000000 [(R10) ] 0 44400 42100 180.555557 text
grestore
gsave
false false false false 260.000000 [(100k) ] 0 44000 42400 180.555557 text
grestore
gsave
43550 42300 43700 42300 10 line
gsave
false false false false 208.000000 [(2) ] 270 43600 42400 144.444443 text
grestore
43300 42300 43401 42352 10 line
43301 42299 43402 42247 10 line
43300 42200 43100 42300 10 line
43100 42300 43300 42400 10 line
43300 42400 43100 42500 10 line
43100 42500 43300 42600 10 line
43300 42200 43100 42100 10 line
43100 42100 43200 42050 10 line
43200 41900 43200 42050 10 line
gsave
false false false false 208.000000 [(3) ] 270 43050 42000 144.444443 text
grestore
gsave
false false false false 260.000000 [(ccw) ] 270 43300 42200 180.555557 text
grestore
43200 42800 43200 42648 10 line
gsave
false false false false 208.000000 [(1) ] 270 43050 42700 144.444443 text
grestore
gsave
false false false false 260.000000 [(cw) ] 270 43300 42800 180.555557 text
grestore
43300 42599 43200 42650 10 line
43300 42300 43550 42300 10 line
grestore
gsave
false false false false 260.000000 [(R9) ] 270 43500 42200 180.555557 text
grestore
gsave
false false false false 260.000000 [(1k) ] 0 42700 42200 180.555557 text
grestore
44600 42300 45800 42300 10 line
gsave
43200 42800 43200 43000 10 line
43050 43000 43350 43000 10 line
gsave
false false false false 208.000000 [(Vcc) ] 0 43075 43050 144.444443 text
grestore
grestore
gsave
43200 41700 43200 41900 10 line
43100 41700 43300 41700 10 line
43155 41650 43245 41650 10 line
43180 41610 43220 41610 10 line
grestore
gsave
46300 42650 46300 42800 10 line
gsave
false false false false 208.000000 [(2) ] 0 46200 42700 144.444443 text
grestore
46300 42400 46248 42501 10 line
46301 42401 46353 42502 10 line
46400 42400 46300 42200 10 line
46300 42200 46200 42400 10 line
46200 42400 46100 42200 10 line
46100 42200 46000 42400 10 line
46400 42400 46500 42200 10 line
46500 42200 46550 42300 10 line
46700 42300 46550 42300 10 line
gsave
false false false false 208.000000 [(3) ] 0 46600 42150 144.444443 text
grestore
gsave
false false false false 260.000000 [(ccw) ] 0 46400 42400 180.555557 text
grestore
45800 42300 45952 42300 10 line
gsave
false false false false 208.000000 [(1) ] 0 45900 42150 144.444443 text
grestore
gsave
false false false false 260.000000 [(cw) ] 0 45800 42400 180.555557 text
grestore
46001 42400 45950 42300 10 line
46300 42400 46300 42650 10 line
grestore
gsave
false false false false 260.000000 [(R11) ] 0 46400 42600 180.555557 text
grestore
gsave
false true false true 260.000000 [(500k) ] 0 46400 42100 180.555557 text
grestore
47000 42300 47000 42800 10 line
47000 42800 46300 42800 10 line
47000 42300 46700 42300 10 line
gsave
false false false false 260.000000 [(Corner Freq. = ~150Hz) ] 0 42500 40100 180.555557 text
grestore
53700 46600 53700 41900 10 line
49000 41900 53700 41900 10 line
49000 40300 49000 41900 10 line
40300 40300 49000 40300 10 line
40500 43200 40300 43200 10 line
40300 43200 40300 40300 10 line
gsave
47200 45800 47400 45700 10 line
47400 45700 47200 45600 10 line
47200 45600 47400 45500 10 line
47400 45500 47200 45400 10 line
47200 45800 47400 45900 10 line
47400 45900 47300 45950 10 line
47300 46100 47300 45950 10 line
47300 45200 47300 45352 10 line
47200 45401 47300 45350 10 line
grestore
gsave
false false false false 260.000000 [(R1) ] 90 47100 45400 180.555557 text
grestore
gsave
false false false false 260.000000 [(1k) ] 0 47400 45500 180.555557 text
grestore
gsave
47300 45000 47300 45200 10 line
47200 45000 47400 45000 10 line
47255 44950 47345 44950 10 line
47280 44910 47320 44910 10 line
grestore
gsave
47300 47100 47300 46900 10 line
gsave
false false false false 156.000000 [(C) ] 0 47200 46950 108.333336 text
grestore
47300 46300 47300 46100 10 line
gsave
false false false false 156.000000 [(E) ] 0 47200 46150 108.333336 text
grestore
47200 46601 316 0 360 10 darc
47300 46300 47100 46500 10 line
47300 46900 47100 46700 10 line
47100 46800 47100 46400 10 line
46700 46600 46884 46600 10 line
gsave
false false false false 156.000000 [(B) ] 0 46800 46650 108.333336 text
grestore
47100 46600 46884 46600 10 line
10 setlinewidth
47210 46340 moveto 47301 46300 lineto 47255 46395 lineto 47235 46365 lineto closepath stroke
47210 46340 moveto 47301 46300 lineto 47255 46395 lineto 47235 46365 lineto closepath fill
grestore
gsave
false false false false 260.000000 [(Q1) ] 0 47600 46600 180.555557 text
grestore
gsave
47300 47100 47300 47300 10 line
47150 47300 47450 47300 10 line
gsave
false false false false 208.000000 [(Vcc) ] 0 47175 47350 144.444443 text
grestore
grestore
gsave
46500 46600 46700 46600 10 line
45900 46700 45900 46500 10 line
45900 46700 46400 46700 10 line
46400 46700 46500 46600 10 line
46500 46600 46400 46500 10 line
46400 46500 45900 46500 10 line
grestore
gsave
false false false false 260.000000 [(B) ] 0 45700 46500 180.555557 text
grestore
47300 46100 47700 46100 10 line
newpath
53200 46300
25
0 360 arc
fill
newpath
53200 46600
25
0 360 arc
fill
newpath
49200 46800
25
0 360 arc
fill
newpath
50700 45300
25
0 360 arc
fill
newpath
50700 45300
25
0 360 arc
fill
newpath
50700 45300
25
0 360 arc
fill
newpath
47700 46100
25
0 360 arc
fill
newpath
47300 48500
25
0 360 arc
fill
newpath
49200 46800
25
0 360 arc
fill
newpath
51600 46600
25
0 360 arc
fill
newpath
51600 46600
25
0 360 arc
fill
newpath
53200 46300
25
0 360 arc
fill
newpath
53200 46300
25
0 360 arc
fill
newpath
53200 46600
25
0 360 arc
fill
newpath
53200 46600
25
0 360 arc
fill
newpath
42900 49500
25
0 360 arc
fill
newpath
44800 49000
25
0 360 arc
fill
newpath
47300 48500
25
0 360 arc
fill
newpath
46500 48500
25
0 360 arc
fill
newpath
46300 43600
25
0 360 arc
fill
newpath
46300 43600
25
0 360 arc
fill
newpath
46300 42800
25
0 360 arc
fill
newpath
46300 43600
25
0 360 arc
fill
newpath
45100 43400
25
0 360 arc
fill
newpath
45100 42300
25
0 360 arc
fill
newpath
45100 43400
25
0 360 arc
fill
newpath
45100 43400
25
0 360 arc
fill
newpath
45100 42300
25
0 360 arc
fill
newpath
42500 43400
25
0 360 arc
fill
newpath
42500 43400
25
0 360 arc
fill
newpath
42500 41900
25
0 360 arc
fill
newpath
42500 43400
25
0 360 arc
fill
newpath
41400 41900
25
0 360 arc
fill
newpath
41400 41900
25
0 360 arc
fill
newpath
41400 43200
25
0 360 arc
fill
newpath
41400 41900
25
0 360 arc
fill
newpath
42500 41900
25
0 360 arc
fill
newpath
42500 41900
25
0 360 arc
fill
newpath
41300 45200
25
0 360 arc
fill
newpath
41300 45200
25
0 360 arc
fill
newpath
40800 45200
25
0 360 arc
fill
newpath
41300 45200
25
0 360 arc
fill
newpath
45100 42300
25
0 360 arc
fill
newpath
46300 42800
25
0 360 arc
fill
newpath
47300 46100
25
0 360 arc
fill
newpath
47700 46100
25
0 360 arc
fill
showpage
%%End
